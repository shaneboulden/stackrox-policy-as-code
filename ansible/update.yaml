---
- hosts: all
  become: false
  vars:
    stackrox_policy_cr:
    file_name:
    git_message:
    github_username:
    github_email:
    github_pat:
  tasks:
    - name: Git checkout
      ansible.builtin.git:
        repo: "https://{{ github_username | urlencode }}:{{ github_pat | urlencode }}@github.com/shaneboulden/stackrox-policy-as-code"
        dest: /tmp/checkout
        version: main

    - name: Git config github
      shell:
        cmd: git config user.name "{{ github_username }}"
        chdir: /tmp/checkout

    - name: Git config email
      shell:
        cmd: git config user.email "{{ github_email }}"
        chdir: /tmp/checkout
  
    - name: Create a new random identifier
      command: "echo pac-updates-{{ lookup('ansible.builtin.password', '/dev/null', length=5, chars='digits') }}"
      register: output

    - name: show branch
      debug: var=output
  
    - name: Create a new branch
      shell: 
        cmd: git checkout -b "{{ output.stdout }}"
        chdir: /tmp/checkout
  
    - name: Add new file for the update
      template:
        src: new-policy.j2
        dest: "/tmp/checkout/policies/new-policy.json"
        mode: 644

    - name: Convert the policy
      shell:
        cmd: python export2gitops.py -i policies/new-policy.json -o policies/{{ file_name }}
        chdir: /tmp/checkout/
  
    - name: Create a new commit
      shell: 
        cmd: git add policies/{{ file_name }} && git commit -m "{{ git_message }}"
        chdir: /tmp/checkout
  
    - name: Push new changes
      shell: 
        cmd: git push origin "{{ output.stdout }}"
        chdir: /tmp/checkout

    - name: Create a new PR
      shell:
        cmd: "python create-pr.py --username {{ github_username }} --token {{ github_pat }} --repo-owner shaneboulden --repo-name stackrox-policy-as-code --head {{ output.stdout }} --base main --title {{ git_message }}"